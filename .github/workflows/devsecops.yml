name: DevSecOps CI/CD Pipeline

on:
  push:
    branches:
      - main  # Trigger on push to the 'main' branch
  pull_request:
    branches:
      - main  # Trigger on pull requests targeting the 'main' branch

jobs:
  gitleaks_scan: # Job untuk Gitleaks Scan
    name: Gitleaks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - run: wget -O .gitleaks.toml https://raw.githubusercontent.com/tanookiai/central-configuration/master/config/gitleaks.toml
      - name: Confirm file
        run: |
          cat .gitleaks.toml
      - uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  trivy_scan: # Job untuk Trivy Scan
    name: Trivy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3 # Checkout kode agar Docker build bisa mengakses Dockerfile
      - name: Set up Docker Buildx # Setup Docker Buildx untuk buildkit
        uses: docker/setup-buildx-action@v2
      - name: Build Docker image # Langkah Docker build ditambahkan di sini
        run: |
          docker build -t my-app-image:latest . # Build image dengan tag my-app-image:latest
      - name: Install Trivy
        run: |
          sudo apt-get update
          sudo apt-get install wget -y
          wget https://github.com/aquasecurity/trivy/releases/download/v0.29.0/trivy_0.29.0_Linux-64bit.deb
          sudo dpkg -i trivy_0.29.0_Linux-64bit.deb
      - name: Scan Docker image with Trivy
        id: trivy_scan
        run: |
          trivy image --exit-code 1 --no-progress my-app-image:latest # Scan image yang baru di-build
      - name: Upload Trivy Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: trivy-report
          path: trivy-report.json
